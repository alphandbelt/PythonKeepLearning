"""

    PyQt 是一个强大且广泛使用的Python库，专门用于创建图形用户界面（GUI）应用程序。
    PyQt 为开发者提供了丰富的工具和组件，使他们能够轻松地构建各种功能丰富、交互式的桌面应用程序。
    它结合了 Python 语言的易用性和Qt 框架的强大功能，使开发者能够在不同平台上创建跨平台的应用程序，
    如Windows、macOS、Linux等。

    Qt 是一个流行的C++框架，被广泛用于开发GUI应用程序。而PyQt则是Qt框架的Python绑定，
    为Python开发者提供了使用Qt库的便捷途径。通过PyQt，开发者能够访问Qt的全部功能，
    包括各种小部件、图形渲染、布局管理、事件处理等。这使得开发者可以创建出视觉上吸引人且高度交互的应用界面。

    PyQt库包含多个模块，涵盖了GUI开发的各个方面。
    其中，QtCore模块提供了核心非GUI功能，如事件处理和定时器。
    QtGui模块则提供了丰富的GUI元素，如窗口、按钮、标签等。
    QtWidgets模块则扩展了QtGui，提供更多的小部件和布局选项。
    此外，QtSql模块用于数据库访问，
    QtNetwork模块用于网络编程，
    QtMultimedia模块用于音视频处理，等等。
    PyQt常用模块


    10：20 开始

    QtCore 模块:
        提供核心的非GUI功能，如时间、事件、字符串处理等。
        示例：创建一个定时器，每秒更新窗口标题。

    QtGui 模块:
        提供与GUI相关的类，如窗口、绘图、小部件等。
        示例：绘制一个简单的图形。

    QtWidgets 模块:
        提供用于创建交互式应用程序的小部件。
        示例：创建一个简单的待办事项列表。
    QtSql 模块:
        提供数据库访问和操作的功能。
        示例：连接到SQLite数据库并显示表格数据。

    QtNetwork 模块:
        提供网络编程支持，如HTTP请求、TCP/IP通信等。
        示例：发送一个简单的HTTP GET请求并显示响应。

    QtMultimedia 模块:
        提供多媒体处理功能，如音频、视频播放等。
        示例：播放一个音频文件。
    QtPrintSupport 模块:
        提供打印支持，用于打印文档和图形。
        示例：打印一个简单的文本。

    QtWebEngineWidgets 模块:
        提供集成的Web浏览器组件，用于在应用程序中显示Web内容。
        示例：显示一个简单的Web页面。
    QtCharts 模块:
        提供图表和数据可视化功能。
        示例：绘制一个简单的柱状图。
    QtOpenGL 模块:
        提供OpenGL集成，用于创建3D图形和交互式视觉效果。
        示例：显示一个旋转的3D立方体。

"""
